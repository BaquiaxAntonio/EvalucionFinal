@page "/Editar/{NumSerie}"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager

<h3>Editar Smartphone</h3>

<EditForm Model="@smartphone" OnValidSubmit="Guardar">
    <div class="form-group">
        <label for="NumSerie">NumSerie</label>
        <InputText id="NumSerie" @bind-Value="smartphone.NumSerie" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Marca">Marca</label>
        <InputText id="Marca" @bind-Value="smartphone.Marca" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Modelo">Modelo</label>
        <InputText id="Modelo" @bind-Value="smartphone.Modelo" class="form-control" />
    </div>
    <div class="form-group">
        <label for="SistemaOperativo">Sistema Operativo</label>
        <InputText id="SistemaOperativo" @bind-Value="smartphone.SistemaOperativo" class="form-control" />
    </div>
    <div class="form-group">
        <label for="NumeroCamaras">Número de Cámaras</label>
        <InputText id="NumeroCamaras" @bind-Value="smartphone.NumCamaras" class="form-control" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Guardar</button>
    </div>
</EditForm>

@if (smartphones != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Número de Serie</th>
                <th>Marca</th>
                <th>Modelo</th>
                <th>Sistema Operativo</th>
                <th>Número de Cámaras</th>
                <th>Eliminar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var smartphone in smartphones)
            {
                <tr>
                    <td>@smartphone.NumSerie</td>
                    <td>@smartphone.Marca</td>
                    <td>@smartphone.Modelo</td>
                    <td>@smartphone.SistemaOperativo</td>
                    <td>@smartphone.NumCamaras</td>
                    <td>
                        <button class="btn btn-danger" @onclick="@(() => BorrarSmartphone(smartphone.NumSerie))">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public string NumSerie { get; set; }
    private Smartphone smartphone = new Smartphone();
    private List<Smartphone> smartphones = new List<Smartphone>();

    protected async Task Guardar()
    {
        var smartphoneExistente = smartphones.FirstOrDefault(r => r.NumSerie == NumSerie);
        if (smartphoneExistente != null)
        {
            smartphoneExistente.NumSerie = smartphone.NumSerie;
            smartphoneExistente.Marca = smartphone.Marca;
            smartphoneExistente.Modelo = smartphone.Modelo;
            smartphoneExistente.SistemaOperativo = smartphone.SistemaOperativo;
            smartphoneExistente.NumCamaras = smartphone.NumCamaras;
        }

        await localStorage.SetItemAsync("smartphones", smartphones);
        NavigationManager.NavigateTo("/Ingreso");
    }

    protected override async Task OnInitializedAsync()
    {
        smartphones = await localStorage.GetItemAsync<List<Smartphone>>("smartphones");
        if (smartphones == null)
            smartphones = new List<Smartphone>();
        else
            smartphone = smartphones.FirstOrDefault(s => s.NumSerie == NumSerie) ?? new Smartphone();
    }

    protected async Task BorrarSmartphone(string numserie)
    {
        var smartphoneEliminar = smartphones.FirstOrDefault(s => s.NumSerie == numserie);
        if (smartphoneEliminar != null)
        {
            smartphones.Remove(smartphoneEliminar);
            await localStorage.SetItemAsync("smartphones", smartphones);
        }
    }
}


